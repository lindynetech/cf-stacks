---
AWSTemplateFormatVersion: "2010-09-09"
Description: "OpenSwan acting as VPN IPSec endpoint"
Parameters:
  KeyName:
    Description: "Key pair name for SSH access"
    Type: "AWS::EC2::KeyPair::KeyName"
  VPC:
    Description: "Just select the one and only default VPC."
    Type: "AWS::EC2::VPC::Id"
  Subnet:
    Description: "Just select one of the available subnets."
    Type: "AWS::EC2::Subnet::Id"
  IPSecSharedSecret:
    Description: "The shared secret key for IPSec."
    Type: String
  VPNUser:
    Description: "The VPN user."
    Type: String
  VPNPassword:
    Description: "The VPN password."
    Type: String
Mappings:
  RegionMap:
    "us-east-1":
      AMI: "ami-6057e21a"
    "us-east-2":
      AMI: "ami-aa1b34cf"
    "us-west-1":
      AMI: "ami-1a033c7a"
    "us-west-2":
      AMI: "ami-32d8124a"
Resources:
  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      SecurityGroupIds:
        - !Ref InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionMap, !Ref "AWS::Region", AMI]
      SubnetId: !Ref Subnet
      UserData:
        "Fn::Base64": !Sub |
          #!/bin/bash -x
          export IPSEC_PSK="${IPSecSharedSecret}"
          export VPN_USER="${VPNUser}"
          export VPN_PASSWORD="${VPNPassword}"
          curl -s https://raw.githubusercontent.com/lindynetech/cf-stacks/master/cf-vpn/vpn-setup.sh | bash -ex
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
  InstanceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access to VPN server"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 500
          ToPort: 500
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 1701
          ToPort: 1701
          CidrIp: "0.0.0.0/0"
        - IpProtocol: udp
          FromPort: 4500
          ToPort: 4500
          CidrIp: "0.0.0.0/0"
Outputs:
  ServerIP:
    Description: "Public IP address of the vpn server"
    Value: !GetAtt "EC2Instance.PublicIp"
  IPSecSharedSecret:
    Description: "The shared key for the VPN connection (IPSec)"
    Value: !Ref IPSecSharedSecret
  VPNUser:
    Description: "The username for the vpn connection"
    Value: !Ref VPNUser
  VPNPassword:
    Description: "The password for the vpn connection"
    Value: !Ref VPNPassword
